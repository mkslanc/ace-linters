"use strict";
(self["webpackChunkace_linters_root"] = self["webpackChunkace_linters_root"] || []).push([[300,3123],{

/***/ 40300:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/*
  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js
*/



var oop = __webpack_require__(89359);
const JavaScriptBehaviour = (__webpack_require__(77157)/* .JavaScriptBehaviour */ .N);
const JavaScriptFoldMode = (__webpack_require__(25848)/* .FoldMode */ .Z);
var tsMode = (__webpack_require__(23123).Mode);

var Mode = function() {
    tsMode.call(this);
    this.$highlightRuleConfig = {jsx: true};
    this.foldingRules = new JavaScriptFoldMode();
    this.$behaviour = new JavaScriptBehaviour();
};
oop.inherits(Mode, tsMode);

(function() {
    this.$id = "ace/mode/tsx";
}).call(Mode.prototype);

exports.Mode = Mode;


/***/ }),

/***/ 23123:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/*
  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js
*/



var oop = __webpack_require__(89359);
var jsMode = (__webpack_require__(88057).Mode);
var TypeScriptHighlightRules = (__webpack_require__(57419).TypeScriptHighlightRules);
var CStyleFoldMode = (__webpack_require__(12764)/* .FoldMode */ .Z);
var MatchingBraceOutdent = (__webpack_require__(1164).MatchingBraceOutdent);

var Mode = function() {
    this.HighlightRules = TypeScriptHighlightRules;
    
    this.$outdent = new MatchingBraceOutdent();
    this.$behaviour = this.$defaultBehaviour;
    this.foldingRules = new CStyleFoldMode();
};
oop.inherits(Mode, jsMode);

(function() {
    this.createWorker = function(session) {
        return null;
    };
    this.$id = "ace/mode/typescript";
}).call(Mode.prototype);

exports.Mode = Mode;


/***/ }),

/***/ 57419:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/*
  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: 21e323af-f665-4161-96e7-5087d262557e) */



var oop = __webpack_require__(89359);
var JavaScriptHighlightRules = (__webpack_require__(33801).JavaScriptHighlightRules);

var TypeScriptHighlightRules = function (options) {

    var tsRules = [
        // Match stuff like: function name: return type)
        {
            token: ["storage.type", "text", "entity.name.function.ts"],
            regex: "(function)(\\s+)([a-zA-Z0-9\$_\u00a1-\uffff][a-zA-Z0-9\d\$_\u00a1-\uffff]*)"
        },
        {
            token: "keyword",
            regex: "(?:\\b(constructor|declare|interface|as|AS|public|private|extends|export|super|readonly|module|namespace|abstract|implements)\\b)"
        },
        {
            token: ["keyword", "storage.type.variable.ts"],
            regex: "(class|type)(\\s+[a-zA-Z0-9_?.$][\\w?.$]*)"
         },
        {
            token: "keyword",
            regex: "\\b(?:super|export|import|keyof|infer)\\b"
        }, 
        {
            token: ["storage.type.variable.ts"],
            regex: "(?:\\b(this\\.|string\\b|bool\\b|boolean\\b|number\\b|true\\b|false\\b|undefined\\b|any\\b|null\\b|(?:unique )?symbol\\b|object\\b|never\\b|enum\\b))"
        }
    ];

    var JSRules = new JavaScriptHighlightRules({jsx: (options && options.jsx) == true}).getRules();
    
    JSRules.no_regex = tsRules.concat(JSRules.no_regex);
    this.$rules = JSRules;
};

oop.inherits(TypeScriptHighlightRules, JavaScriptHighlightRules);

exports.TypeScriptHighlightRules = TypeScriptHighlightRules;


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLjMwMC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsVUFBVSxtQkFBTyxDQUFDLEtBQVk7QUFDOUIsNEJBQTRCLHlEQUFxRDtBQUNqRiwyQkFBMkIsOENBQXdDO0FBQ25FLGFBQWEsaUNBQTRCOztBQUV6QztBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELFlBQVk7Ozs7Ozs7O0FDdkJaO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixVQUFVLG1CQUFPLENBQUMsS0FBWTtBQUM5QixhQUFhLGlDQUE0QjtBQUN6QywrQkFBK0IscURBQWdFO0FBQy9GLHFCQUFxQiw4Q0FBb0M7QUFDekQsMkJBQTJCLGdEQUF3RDs7QUFFbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxZQUFZOzs7Ozs7OztBQzVCWjtBQUNBOztBQUVhOztBQUViLFVBQVUsbUJBQU8sQ0FBQyxLQUFZO0FBQzlCLCtCQUErQixxREFBZ0U7O0FBRS9GOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnREFBZ0Qsc0NBQXNDO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FjZS1saW50ZXJzLXJvb3QvLi9ub2RlX21vZHVsZXMvYWNlLWNvZGUvc3JjL21vZGUvdHN4LmpzIiwid2VicGFjazovL2FjZS1saW50ZXJzLXJvb3QvLi9ub2RlX21vZHVsZXMvYWNlLWNvZGUvc3JjL21vZGUvdHlwZXNjcmlwdC5qcyIsIndlYnBhY2s6Ly9hY2UtbGludGVycy1yb290Ly4vbm9kZV9tb2R1bGVzL2FjZS1jb2RlL3NyYy9tb2RlL3R5cGVzY3JpcHRfaGlnaGxpZ2h0X3J1bGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIFRISVMgRklMRSBXQVMgQVVUT0dFTkVSQVRFRCBCWSBtb2RlLnRtcGwuanNcbiovXG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgb29wID0gcmVxdWlyZShcIi4uL2xpYi9vb3BcIik7XG5jb25zdCBKYXZhU2NyaXB0QmVoYXZpb3VyID0gcmVxdWlyZShcIi4vYmVoYXZpb3VyL2phdmFzY3JpcHRcIikuSmF2YVNjcmlwdEJlaGF2aW91cjtcbmNvbnN0IEphdmFTY3JpcHRGb2xkTW9kZSA9IHJlcXVpcmUoXCIuL2ZvbGRpbmcvamF2YXNjcmlwdFwiKS5Gb2xkTW9kZTtcbnZhciB0c01vZGUgPSByZXF1aXJlKFwiLi90eXBlc2NyaXB0XCIpLk1vZGU7XG5cbnZhciBNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgdHNNb2RlLmNhbGwodGhpcyk7XG4gICAgdGhpcy4kaGlnaGxpZ2h0UnVsZUNvbmZpZyA9IHtqc3g6IHRydWV9O1xuICAgIHRoaXMuZm9sZGluZ1J1bGVzID0gbmV3IEphdmFTY3JpcHRGb2xkTW9kZSgpO1xuICAgIHRoaXMuJGJlaGF2aW91ciA9IG5ldyBKYXZhU2NyaXB0QmVoYXZpb3VyKCk7XG59O1xub29wLmluaGVyaXRzKE1vZGUsIHRzTW9kZSk7XG5cbihmdW5jdGlvbigpIHtcbiAgICB0aGlzLiRpZCA9IFwiYWNlL21vZGUvdHN4XCI7XG59KS5jYWxsKE1vZGUucHJvdG90eXBlKTtcblxuZXhwb3J0cy5Nb2RlID0gTW9kZTtcbiIsIi8qXG4gIFRISVMgRklMRSBXQVMgQVVUT0dFTkVSQVRFRCBCWSBtb2RlLnRtcGwuanNcbiovXG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgb29wID0gcmVxdWlyZShcIi4uL2xpYi9vb3BcIik7XG52YXIganNNb2RlID0gcmVxdWlyZShcIi4vamF2YXNjcmlwdFwiKS5Nb2RlO1xudmFyIFR5cGVTY3JpcHRIaWdobGlnaHRSdWxlcyA9IHJlcXVpcmUoXCIuL3R5cGVzY3JpcHRfaGlnaGxpZ2h0X3J1bGVzXCIpLlR5cGVTY3JpcHRIaWdobGlnaHRSdWxlcztcbnZhciBDU3R5bGVGb2xkTW9kZSA9IHJlcXVpcmUoXCIuL2ZvbGRpbmcvY3N0eWxlXCIpLkZvbGRNb2RlO1xudmFyIE1hdGNoaW5nQnJhY2VPdXRkZW50ID0gcmVxdWlyZShcIi4vbWF0Y2hpbmdfYnJhY2Vfb3V0ZGVudFwiKS5NYXRjaGluZ0JyYWNlT3V0ZGVudDtcblxudmFyIE1vZGUgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLkhpZ2hsaWdodFJ1bGVzID0gVHlwZVNjcmlwdEhpZ2hsaWdodFJ1bGVzO1xuICAgIFxuICAgIHRoaXMuJG91dGRlbnQgPSBuZXcgTWF0Y2hpbmdCcmFjZU91dGRlbnQoKTtcbiAgICB0aGlzLiRiZWhhdmlvdXIgPSB0aGlzLiRkZWZhdWx0QmVoYXZpb3VyO1xuICAgIHRoaXMuZm9sZGluZ1J1bGVzID0gbmV3IENTdHlsZUZvbGRNb2RlKCk7XG59O1xub29wLmluaGVyaXRzKE1vZGUsIGpzTW9kZSk7XG5cbihmdW5jdGlvbigpIHtcbiAgICB0aGlzLmNyZWF0ZVdvcmtlciA9IGZ1bmN0aW9uKHNlc3Npb24pIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICB0aGlzLiRpZCA9IFwiYWNlL21vZGUvdHlwZXNjcmlwdFwiO1xufSkuY2FsbChNb2RlLnByb3RvdHlwZSk7XG5cbmV4cG9ydHMuTW9kZSA9IE1vZGU7XG4iLCIvKlxuICBUSElTIEZJTEUgV0FTIEFVVE9HRU5FUkFURUQgQlkgbW9kZV9oaWdobGlnaHRfcnVsZXMudG1wbC5qcyAoVVVJRDogMjFlMzIzYWYtZjY2NS00MTYxLTk2ZTctNTA4N2QyNjI1NTdlKSAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIG9vcCA9IHJlcXVpcmUoXCIuLi9saWIvb29wXCIpO1xudmFyIEphdmFTY3JpcHRIaWdobGlnaHRSdWxlcyA9IHJlcXVpcmUoXCIuL2phdmFzY3JpcHRfaGlnaGxpZ2h0X3J1bGVzXCIpLkphdmFTY3JpcHRIaWdobGlnaHRSdWxlcztcblxudmFyIFR5cGVTY3JpcHRIaWdobGlnaHRSdWxlcyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICB2YXIgdHNSdWxlcyA9IFtcbiAgICAgICAgLy8gTWF0Y2ggc3R1ZmYgbGlrZTogZnVuY3Rpb24gbmFtZTogcmV0dXJuIHR5cGUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRva2VuOiBbXCJzdG9yYWdlLnR5cGVcIiwgXCJ0ZXh0XCIsIFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24udHNcIl0sXG4gICAgICAgICAgICByZWdleDogXCIoZnVuY3Rpb24pKFxcXFxzKykoW2EtekEtWjAtOVxcJF9cXHUwMGExLVxcdWZmZmZdW2EtekEtWjAtOVxcZFxcJF9cXHUwMGExLVxcdWZmZmZdKilcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0b2tlbjogXCJrZXl3b3JkXCIsXG4gICAgICAgICAgICByZWdleDogXCIoPzpcXFxcYihjb25zdHJ1Y3RvcnxkZWNsYXJlfGludGVyZmFjZXxhc3xBU3xwdWJsaWN8cHJpdmF0ZXxleHRlbmRzfGV4cG9ydHxzdXBlcnxyZWFkb25seXxtb2R1bGV8bmFtZXNwYWNlfGFic3RyYWN0fGltcGxlbWVudHMpXFxcXGIpXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgdG9rZW46IFtcImtleXdvcmRcIiwgXCJzdG9yYWdlLnR5cGUudmFyaWFibGUudHNcIl0sXG4gICAgICAgICAgICByZWdleDogXCIoY2xhc3N8dHlwZSkoXFxcXHMrW2EtekEtWjAtOV8/LiRdW1xcXFx3Py4kXSopXCJcbiAgICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRva2VuOiBcImtleXdvcmRcIixcbiAgICAgICAgICAgIHJlZ2V4OiBcIlxcXFxiKD86c3VwZXJ8ZXhwb3J0fGltcG9ydHxrZXlvZnxpbmZlcilcXFxcYlwiXG4gICAgICAgIH0sIFxuICAgICAgICB7XG4gICAgICAgICAgICB0b2tlbjogW1wic3RvcmFnZS50eXBlLnZhcmlhYmxlLnRzXCJdLFxuICAgICAgICAgICAgcmVnZXg6IFwiKD86XFxcXGIodGhpc1xcXFwufHN0cmluZ1xcXFxifGJvb2xcXFxcYnxib29sZWFuXFxcXGJ8bnVtYmVyXFxcXGJ8dHJ1ZVxcXFxifGZhbHNlXFxcXGJ8dW5kZWZpbmVkXFxcXGJ8YW55XFxcXGJ8bnVsbFxcXFxifCg/OnVuaXF1ZSApP3N5bWJvbFxcXFxifG9iamVjdFxcXFxifG5ldmVyXFxcXGJ8ZW51bVxcXFxiKSlcIlxuICAgICAgICB9XG4gICAgXTtcblxuICAgIHZhciBKU1J1bGVzID0gbmV3IEphdmFTY3JpcHRIaWdobGlnaHRSdWxlcyh7anN4OiAob3B0aW9ucyAmJiBvcHRpb25zLmpzeCkgPT0gdHJ1ZX0pLmdldFJ1bGVzKCk7XG4gICAgXG4gICAgSlNSdWxlcy5ub19yZWdleCA9IHRzUnVsZXMuY29uY2F0KEpTUnVsZXMubm9fcmVnZXgpO1xuICAgIHRoaXMuJHJ1bGVzID0gSlNSdWxlcztcbn07XG5cbm9vcC5pbmhlcml0cyhUeXBlU2NyaXB0SGlnaGxpZ2h0UnVsZXMsIEphdmFTY3JpcHRIaWdobGlnaHRSdWxlcyk7XG5cbmV4cG9ydHMuVHlwZVNjcmlwdEhpZ2hsaWdodFJ1bGVzID0gVHlwZVNjcmlwdEhpZ2hsaWdodFJ1bGVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9